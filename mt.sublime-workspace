{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"op",
				"opImpl"
			],
			[
				"sho",
				"should"
			],
			[
				"shou",
				"shouldEqual"
			],
			[
				"baser",
				"baseGraphLabels"
			],
			[
				"ingo",
				"ignoreLabel"
			],
			[
				"rese",
				"reserve"
			],
			[
				"reser",
				"reserveEdges"
			],
			[
				"spe",
				"specified"
			],
			[
				"adj",
				"adjacent"
			],
			[
				"nodeNumS",
				"nodeNumStop"
			],
			[
				"getEd",
				"getNodeSizes"
			],
			[
				"backgr",
				"backgroundBias"
			],
			[
				"backgroun",
				"backgroundLabel"
			],
			[
				"backG",
				"backgroundBias"
			],
			[
				"grap",
				"graph"
			],
			[
				"gra",
				"graph"
			],
			[
				"daat",
				"dataRGB"
			],
			[
				"el",
				"elif"
			],
			[
				"nodeNum",
				"nodeNumStop"
			],
			[
				"nodeNumSt",
				"nodeNumStopCond"
			],
			[
				"edgeS",
				"edgeSizes"
			],
			[
				"ed",
				"edgeWeights"
			],
			[
				"array",
				"array_equal"
			],
			[
				"graph1",
				"graph1NodeWeights"
			],
			[
				"seedS",
				"seedsArray"
			],
			[
				"exp",
				"except"
			],
			[
				"back",
				"backgroundBias"
			],
			[
				"_genGr",
				"_genGraphSegmentationFunctions"
			],
			[
				"nodeNu",
				"nodeNumStop"
			],
			[
				"Node",
				"nodeFeatures"
			],
			[
				"nod",
				"nodeNumStop"
			],
			[
				"segm",
				"segmentation"
			],
			[
				"nodeN",
				"nodeNumStop"
			],
			[
				"ver",
				"verboseVisitor"
			],
			[
				"make",
				"makeHierarchical"
			],
			[
				"Numpy",
				"NumpyAnyArray"
			],
			[
				"ward",
				"wardF"
			],
			[
				"outA",
				"outArrayMap"
			],
			[
				"edgeWe",
				"edgeWeightsArrayMap"
			],
			[
				"nodeSizeA",
				"nodeSizeArrayMap"
			],
			[
				"FloatN",
				"FloatNodeArrayMap"
			],
			[
				"best",
				"bestUpper"
			],
			[
				"converg",
				"comnverged"
			],
			[
				"conver",
				"comnverged"
			],
			[
				"node",
				"nodeNumStopCond"
			],
			[
				"eI",
				"eInd"
			],
			[
				"edeg",
				"edgeIndicator"
			],
			[
				"labels",
				"labelsArray"
			],
			[
				"Ui",
				"UInt32NodeArray"
			],
			[
				"Num",
				"NumpyArray"
			],
			[
				"mu",
				"multicutSegmentation"
			],
			[
				"U",
				"UInt32"
			],
			[
				"edge",
				"edgeIndicator"
			],
			[
				"toD",
				"toDenseArray"
			],
			[
				"Uint",
				"UInt32NodeArray"
			],
			[
				"reg",
				"registerConverters"
			],
			[
				"Nu",
				"NumpyArray"
			],
			[
				"Fl",
				"FloatEdgeArrayMap"
			],
			[
				"create",
				"createFile"
			],
			[
				"crea",
				"createFile"
			],
			[
				"noeNumS",
				"nodeNumStopCond"
			],
			[
				"res",
				"resultArray"
			],
			[
				"resha",
				"reshapeIfEmpty"
			],
			[
				"merg",
				"mergeGraph"
			],
			[
				"accu",
				"accumulateEdgeFeatures"
			],
			[
				"cl",
				"clusterOp"
			],
			[
				"accum",
				"accumulateNodeFeatures"
			],
			[
				"Edge",
				"edgeIndicator"
			],
			[
				"nodeM",
				"nodeMapIn"
			],
			[
				"nodeMap",
				"nodeMapOut"
			],
			[
				"nodeMa",
				"nodeMapIn"
			],
			[
				"water",
				"watershedsOption"
			],
			[
				"graph",
				"graph_detail"
			],
			[
				"lemon",
				"lemon_graph"
			],
			[
				"labelsAr",
				"labelsArrayMap"
			],
			[
				"lowes",
				"lowestIndex"
			],
			[
				"sz",
				"size_t"
			],
			[
				"pyNode",
				"pyNodeWeightedWatershedsSegmentation"
			],
			[
				"labelsA",
				"labelsArray"
			],
			[
				"watre",
				"watershedsOption"
			],
			[
				"nodeW",
				"nodeWeightsArrayMap"
			],
			[
				"wa",
				"watershedsOption"
			],
			[
				"seeds",
				"seedsArray"
			],
			[
				"GR",
				"Graph"
			],
			[
				"wh",
				"whereEdge"
			],
			[
				"edgeH",
				"edgeHolderVectorClsName"
			],
			[
				"PyE",
				"PyEdgeVector"
			],
			[
				"pro",
				"projectLabelsToGridGraph"
			],
			[
				"base",
				"baseGraphLabels"
			],
			[
				"baseGra",
				"baseGraphLabels"
			],
			[
				"pr",
				"projectLabelsToBaseGraph"
			],
			[
				"nodeId",
				"nodeIdMap"
			],
			[
				"NOde",
				"NodeIt"
			],
			[
				"In",
				"IntrinsicGraphShape"
			],
			[
				"NUm",
				"NumpyAnyArray"
			],
			[
				"ra",
				"ragEdgeFeaturesArray"
			],
			[
				"other",
				"otherArray"
			],
			[
				"to",
				"toReshapeArray"
			],
			[
				"type",
				"typename"
			],
			[
				"ty",
				"typedef"
			],
			[
				"Gra",
				"GraphNodeMapDim"
			],
			[
				"Mul",
				"MultiArray"
			],
			[
				"typ",
				"typename"
			],
			[
				"OG",
				"OG_DIM"
			],
			[
				"G",
				"G_DIM"
			],
			[
				"PyN",
				"PyNodeMapTraits"
			],
			[
				"Rag",
				"RagGraph"
			],
			[
				"Ra",
				"RagGraph"
			],
			[
				"run",
				"RuntimeError"
			],
			[
				"Gri",
				"GridGraphUndirected2d"
			],
			[
				"Grd",
				"GridRegionAdjacencyGraph"
			],
			[
				"Grid",
				"GridRegionAdjacencyGraph"
			],
			[
				"Reg",
				"regionAdjacencyGraph"
			],
			[
				"baseGRa",
				"baseGraphLabels"
			],
			[
				"baseGr",
				"baseGraph"
			],
			[
				"vigra",
				"vigraph"
			],
			[
				"is",
				"isinstance"
			],
			[
				"baseG",
				"baseGraph"
			],
			[
				"resr",
				"reserveEdges"
			],
			[
				"pyRag",
				"pyRagNodeFeaturesMultiband"
			],
			[
				"RAgN",
				"RagNodeMapDim"
			],
			[
				"d",
				"d"
			],
			[
				"RagN",
				"RagNodeMapDim"
			],
			[
				"RagNode",
				"RagNodeMapDim"
			],
			[
				"ragN",
				"ragNodeFeatures"
			],
			[
				"UI",
				"UInt32NodeArrayMap"
			],
			[
				"nodeFeat",
				"nodeFeaturesArrayMap"
			],
			[
				"pyRagE",
				"pyRagEdgeSize"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Package Control Messages\n========================\n\nKeymaps:\n-------\n\n  \n  \n  Thank you for installing Keymaps -- a tool that can greatly improve your work.\n  \n  This plugin shows all enabled keymaps in a searchable color-coded list.\n  \n  You can select an entry which will open corresponding \".sublime-keymap\" file and select the keymap for editing.\n  \n  Here's an example of possible output (OS X, truncated):\n  \n                       Case Conversion (7)\n        [ ⌃ ⌥ C ], [ ⌃ ⌥ S ]: Convert Case: snake_case\n        [ ⌃ ⌥ C ], [ ⌃ ⌥ C ]: Convert Case: camelCase\n        [ ⌃ ⌥ C ], [ ⌃ ⌥ P ]: Convert Case: PascalCase\n        [ ⌃ ⌥ C ], [ ⌃ ⌥ D ]: Convert Case: dot.case\n        [ ⌃ ⌥ C ], [ ⌃ ⌥ H ]: Convert Case: dash-case\n        [ ⌃ ⌥ C ], [ ⌃ ⌥ W ]: Convert Case: separate␣words\n        [ ⌃ ⌥ C ], [ ⌃ ⌥ / ]: Convert Case: separate/with/slash\n  \n  \n  Features\n  ========\n  \n  * Search for keymaps by function\n  * Shows searchable color-coded Cheat Sheet (overview) of keymaps\n  * Open the keymap file to edit chosen keymap\n  \n  \n  Usage\n  =====\n  \n  Find a keymap for...\n  --------------------\n  \n  * Invoke via [ ⌃ ]+[ ⌥ ]+[ ? ] / [ Ctrl ]+[ Alt ]+[ ? ] (menu: `Tools` -> `Keymaps` -> `Find a keymap for...`)\n  * Start typing the function you need keymap for and - voilà!\n  * Additionaly, hit [ ⏎ ] to execute it!\n  \n  \n  Cheat Sheet\n  -----------\n  \n  * Invoke via [ ⌃ ]+[ ⌥ ]+[ _ ] / [ Ctrl ]+[ Alt ]+[ _ ] (menu: `Tools` -> `Keymaps` -> `Cheat Sheet`)\n  * Use these commands to browse the Cheat Sheet and select an entry to open corresponding `.sublime-keymap` file and edit the keymap\n  \n  [ ⌃ ]+[ ⌥ ]+[ ⇧ ]+[ ↓ ] / [ Ctrl ]+[ Alt ]+[ ⇧ ]+[ ↓ ]: Navigate Forward\n  \n  [ ⌃ ]+[ ⌥ ]+[ ⇧ ]+[ ↑ ] / [ Ctrl ]+[ Alt ]+[ ⇧ ]+[ ↑ ]: Navigate Backward\n  \n  [ ⌃ ]+[ ⌥ ]+[ ⇧ ]+[ C ] / [ Ctrl ]+[ Alt ]+[ ⇧ ]+[ C ]: Clear Selection\n  \n  [ ⌃ ]+[ ⌥ ]+[ ⇧ ]+[ ⏎ ] / [ Ctrl ]+[ Alt ]+[ ⇧ ]+[ ⏎ ]: Open .sublime-keymap File For Editing\n  \n  or double-click previously selected line while holding [ ⌃ ]+[ ⌥ ] / [ Ctrl ]+[ Alt ]\n  \n  \n  Warning\n  =======\n  \n  If you experience problems or editor crashes please file an issue at https://github.com/MiroHibler/sublime-keymaps/issues.\n  \n  \n  Options\n  =======\n  \n  You can now opt for pretty simbols instead of text for keys.\n  \n  Go to `Preferences` -> `Settings - User` and add this to the file:\n  \n  \"keymaps\": { \"show_pretty_keys\": true }\n  \n  \n  Changelog\n  =========\n  \n  ### v1.3.2\n  \n  * Bug fix for issue #15\n  \n  ### v1.3.1\n  \n  * Bug fix for issue #9: parse Default.sublime-keymap file in packages\n  \n  ### v1.3.0\n  \n  * Search for keymaps by function\n  * Simplified keymaps for Keymaps itself\n  * Moved to Tools menu\n  * Bug fixes (yes, I know - again :P )\n  \n  ### v1.2.3\n  \n  * Bumped internal version number\n  \n  ### v1.2.2\n  \n  * Fixed bug in Keymaps.py in v1.2.1 (and v1.2.0) preventing plugin running\n  \n  ### v1.2.1\n  \n  * Fixed bug in messages.json preventing plugin upgrade\n  \n  ### v1.2.0\n  \n  * Additional Sublime Text 3 compatibility\n  * More Cross-platform pretty simbols instead of text for keys (optional)\n  * Bug fixes\n  \n  ### v1.1.0\n  \n  * Sublime Text 3 compatibility\n  * Cleaned up and center-aligned listing\n  * Cross-platform pretty simbols instead of text for keys (optional)\n  * Bug fixes\n  \n  ### v1.0.0\n  \n  * Initial release\n  \n  \n  Acknowledgments\n  ===============\n  Inspired by KeymapViewer (https://github.com/wwwjfy/KeymapViewer)\n  \n  \n  Copyright and license\n  =====================\n  \n  Copyright © 2013 M. Hibler (http://miro@hibler.me)\n  \n  Licensed under the MIT (http://miro.mit-license.org) license.\n  \n  Enjoy! :)\n  \n  ---------------------------------\n  Follow me on Twitter: @MiroHibler\n  ---------------------------------\n",
			"settings":
			{
				"buffer_size": 3719,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"scratch": true
			}
		},
		{
			"file": "mt.sublime-project",
			"settings":
			{
				"buffer_size": 353,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/tbeier/.config/sublime-text-3/Packages/User/SublimePython.sublime-settings",
			"settings":
			{
				"buffer_size": 1166,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/tbeier/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
			"settings":
			{
				"buffer_size": 225,
				"line_ending": "Unix"
			}
		},
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/tbeier/.config/sublime-text-3/Packages/LaTeXTools/LaTeXTools Preferences.sublime-settings",
			"settings":
			{
				"buffer_size": 3160,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/tbeier/.config/sublime-text-3/Packages/User/SublimeCodeIntel.sublime-settings",
			"settings":
			{
				"buffer_size": 4547,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/tbeier/src/vigra/vigranumpy/src/core/export_graph_visitor.hxx",
			"settings":
			{
				"buffer_size": 22063,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 470,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/tbeier/src/vigra/test/utilities/test.cxx",
			"settings":
			{
				"buffer_size": 41194,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 138.0,
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"Package Control: Ins",
				"Package Control: Install Package"
			],
			[
				"packge",
				"Package Control: Install Package"
			],
			[
				"packack ",
				"Package Control: Disable Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Enable Package"
			],
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package ",
				"Preferences: Browse Packages"
			],
			[
				"Snippet: ",
				"Snippet: main()"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 114.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			" import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/tbeier/src/vigra/vigranumpy/examples/graph_watersheds.py",
		"/home/tbeier/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/tbeier/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/tbeier/src/vigra/vigranumpy/examples/graph_new_watersheds.py",
		"/home/tbeier/src/masterthesis/thesis/Chapters/Chapter01.tex",
		"/home/tbeier/src/masterthesis/thesis/main.tex",
		"/home/tbeier/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/tbeier/.config/sublime-text-3/Packages/User/LaTeXTools Preferences.sublime-settings",
		"/home/tbeier/.config/sublime-text-3/Packages/User/SublimePythonIDE/SublimePython.sublime-settings",
		"/home/tbeier/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/tbeier/src/vigra/vigranumpy/examples/shortestpath.py",
		"/home/tbeier/.config/sublime-text-3/Packages/User/clatex.sublime-build",
		"/home/tbeier/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/tbeier/src/vigra/vigranumpy/src/core/CMakeLists.txt",
		"/home/tbeier/src/vigra/include/vigra/merge_graph_adaptor.hxx",
		"/home/tbeier/src/vigra/test/CMakeLists.txt",
		"/home/tbeier/src/vigra/include/vigra/adjacency_list_graph.hxx",
		"/home/tbeier/src/vigra/test/graph_algorithm/test.cxx",
		"/home/tbeier/src/vigra/include/vigra/graph_helper/graph_item_impl.hxx",
		"/home/tbeier/src/masterthesis/thesis/thesis.brf",
		"/home/tbeier/src/masterthesis/thesis/main.lol",
		"/home/tbeier/src/vigra/include/vigra/merge_graph/iterable_partition_old.hxx",
		"/home/tbeier/src/vigra/include/vigra/graph_iterator_functors-.hxx",
		"/home/tbeier/src/vigra/include/vigra/hierarchical_clustering.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/export_graph_algorithm_visitor.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/export_graph_shortest_path_visitor.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/adjacencyListGraph.cxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/gridGraph2d.cxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/gridGraph3d.cxx",
		"/home/tbeier/src/vigra/include/vigra/python_graph.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/export_graph_rag_visitor.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/export_graph_hierarchical_clustering_visitor.hxx",
		"/home/tbeier/src/vigra/test/merge_graph_adaptor/test.cxx",
		"/home/tbeier/src/vigra/include/vigra/graph_generalization.hxx",
		"/home/tbeier/src/vigra/include/vigra/python_graph_generalization.hxx",
		"/home/tbeier/src/vigra/include/vigra/merge_graph/maps/python_clustering_operator.hxx",
		"/home/tbeier/src/vigra/include/vigra/graph_helper/on_the_fly_edge_map.hxx",
		"/home/tbeier/src/vigra/include/vigra/graph_helper/dense_map.hxx",
		"/home/tbeier/src/vigra/include/vigra/merge_graph/maps/python_map.hxx",
		"/home/tbeier/src/vigra/include/vigra/python_graph_maps.hxx",
		"/home/tbeier/src/vigra/include/vigra/merge_graph/maps/clustering_operator.hxx",
		"/home/tbeier/src/seglib/include/seglib/distances/distance.hxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/graph_workflow.py",
		"/home/tbeier/src/seglib/seglibpython/seglib/multicuts/__init__.py",
		"/home/tbeier/src/seglib/seglibpython/seglib/multicuts/weight_modifier.py",
		"/home/tbeier/src/seglib/seglibpython/seglib/preprocessing/__init__.py",
		"/home/tbeier/src/seglib/seglibpython/seglib/edge_detectors/__init__.py",
		"/home/tbeier/src/seglib/seglibpython/seglib/edge_detectors/superpixel/__init__.py",
		"/home/tbeier/src/gseg/gseg/struct_ce.py",
		"/home/tbeier/src/gseg/gseg/segmentors/cgp_segmentor.py",
		"/home/tbeier/src/gseg/gseg/segmentors/oversegmentor.py",
		"/home/tbeier/src/vigra/vigranumpy/examples/graph_smoothing.py",
		"/home/tbeier/src/pyqtgraph/examples/hdf5.py",
		"/home/tbeier/src/pyqtgraph/examples/GLMeshItem.py",
		"/home/tbeier/src/vigra/include/vigra/graph_morphology.hxx",
		"/home/tbeier/src/vigra/include/vigra/graph_algorithms.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/gridGraph.cxx",
		"/home/tbeier/src/vigra/include/vigra/watersheds.hxx",
		"/home/tbeier/src/vigra/include/vigra/multi_gridgraph.hxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/seg_interface.py",
		"/home/tbeier/src/vigra/include/vigra/multi_watersheds.hxx",
		"/home/tbeier/src/vigra/include/vigra/merge_graph/merge_graph_adaptor.hxx",
		"/home/tbeier/src/vigra/include/vigra/multi_localminmax.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/export_graph_visitor.hxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/grid_graph_shortestpath.py",
		"/home/tbeier/src/vigra/include/vigra/metaprogramming.hxx",
		"/home/tbeier/Desktop/Dein  gestoese",
		"/home/tbeier/src/vigra/include/vigra/python_utility.hxx",
		"/home/tbeier/src/vigra/include/vigra/merge_graph/distance_.hxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/graph_felzenszwalb.py",
		"/home/tbeier/src/vigra/vigranumpy/src/core/graphAlgorithms.cxx",
		"/home/tbeier/src/vigra/vigranumpy/test/test4.py",
		"/home/tbeier/src/vigra/test/adjacency_list_graph/test.cxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/mergeGraphAdaptor.cxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/graph_shortest_path_smoothing.py",
		"/home/tbeier/src/vigra/vigranumpy/examples/hsuperpixels.py",
		"/home/tbeier/src/vigra/vigranumpy/lib/__init__.py",
		"/home/tbeier/src/vigra/doc/vigra/dir_7f96f2633e10b0a48b80c0ec5d77b1ef.html",
		"/home/tbeier/src/vigra/doc/vigra/dir_ae9a6ba883a4624c49543033ae9d8237.html",
		"/home/tbeier/src/vigra/doc/vigra/dir_146a719a858009f14eceadc3928c77d2.html",
		"/home/tbeier/uni/masterthesis/thesis/Chapters/multicut/cgc_algorithms.tex",
		"/home/tbeier/uni/masterthesis/thesis/Bibliography.bib",
		"/home/tbeier/uni/masterthesis/thesis/Chapters/Chapter01.lyx",
		"/home/tbeier/uni/masterthesis/thesis/thesis.bib",
		"/home/tbeier/uni/masterthesis/thesis/FrontBackMatter/Bibliography.tex",
		"/home/tbeier/src/vigra/include/vigra/numpy_array_taggedshape.hxx",
		"/home/tbeier/src/opengm/include/opengm/graphicalmodel/graphicalmodel.hxx",
		"/home/tbeier/src/vigra/include/vigra/lemon_opengm.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/mergegraph.cxx",
		"/home/tbeier/src/vigra/include/vigra/numpy_array_traits.hxx",
		"/home/tbeier/src/vigra/include/vigra/numpy_array.hxx",
		"/home/tbeier/src/vigra/include/vigra/graph_helper/implicit_maps.hxx",
		"/home/tbeier/src/vigra/include/vigra/metrics.hxx",
		"/home/tbeier/src/vigra/include/vigra/array_vector.hxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/felzenszwalb.py",
		"/home/tbeier/src/vigra/include/metrics.hxx",
		"/home/tbeier/src/vigra/include/vigra/seg_to_seeds.hxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/pyop.py",
		"/home/tbeier/src/vigra/include/vigra/merge_graph/distance.hxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/mst.py",
		"/home/tbeier/src/vigra/vigranumpy/examples/topDownWs.py",
		"/home/tbeier/src/vigra/include/vigra/union_find.hxx",
		"/home/tbeier/src/vigra/include/vigra/algorithm.hxx",
		"/home/tbeier/src/vigra/include/vigra/graph_helper/dense_multi_map.hxx",
		"/home/tbeier/src/vigra/test/merge_graph/test.cxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/segmentation.cxx",
		"/home/tbeier/src/vigra/test/merge_graph/test_rag_merge.cxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/new_cluster_operators.py",
		"/home/tbeier/cvpr/new/opengmhmc/src/interfaces/python/opengm/_inference_interface_generator.py",
		"/home/tbeier/src/vigra/vigranumpy/src/core/histogram.cxx",
		"/home/tbeier/src/vigra/include/vigra/multi_histogram.hxx",
		"/home/tbeier/src/seglib/src/python/histogram/py_histogram.cxx",
		"/home/tbeier/src/vigra/vigranumpy/examples/oldhsuperpixels.py",
		"/home/tbeier/src/vigra/include/vigra/priority_queue.hxx",
		"/home/tbeier/src/vigra/include/vigra/merge_graph/maps/merge_graph_view_map.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/graphs.cxx",
		"/home/tbeier/src/vigra/include/vigra/rag/new_rag.hxx",
		"/home/tbeier/src/vigra/include/vigra/rag/rag.hxx",
		"/home/tbeier/src/opengm/include/opengm/inference/visitors/visitor.hxx",
		"/home/tbeier/src/opengm/include/opengm/inference/new_visitors/new_visitors.hxx",
		"/home/tbeier/src/vigra/include/vigra/hierarchical_clustering_old.hxx",
		"/home/tbeier/src/vigra/vigranumpy/src/core/rag_rag.cxx",
		"/usr/local/include/vigra/numpy_array.hxx",
		"/home/tbeier/src/vigra/include/vigra/tinyvector.hxx",
		"/home/tbeier/src/vigra/include/vigra/graph_map_algorithms.hxx",
		"/home/tbeier/src/vigra/profiling/CMakeLists.txt",
		"/home/tbeier/cvpr/new/opengmhmc/include/opengm/inference/cgc.hxx",
		"/home/tbeier/src/vigra/include/vigra/graphs.hxx"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"graph0",
			"pylab",
			" =",
			"Button",
			"plt",
			"matplotlib",
			"sys",
			"vigra",
			"numpy",
			"vigraph",
			"lena",
			"png",
			"detail_python_graph_generalization",
			"NodeIteratorHolder",
			"Iterab",
			"deque",
			"VIGRA_PYTHON_GRAPH_GENERALIZATION_HXX",
			"Edge",
			"GeneralizedSimpleNorm",
			"ChiSquared",
			"GeneralizedSimpleNorm",
			"Norm",
			"false",
			"SquaredNorm",
			"GeneralizedNorm",
			"GNorm",
			"pmap",
			"transform_iterator",
			"GraphNode",
			"adjGraphSimpleTestStart0",
			"AdjacencyListGraphTestSuite",
			"AdjacencyListGraphOffTest",
			"function",
			"nosetest",
			"mergeG",
			"pyEdgeWeightNodeFeaturesConstructor",
			"graphMap",
			"minEdgeWeightNodeDist",
			"addChannelDim",
			"minEdgeWeightNodeDist",
			"minWeight",
			"NORM_DISTANCE",
			"edgeSizes",
			"graphMap",
			"nodeNumStopCond",
			"isGridGraph",
			"minEdgeWeightNodeDist",
			"g1",
			"pyNodeWeightedWatershedsSeeds",
			"labelsNodeWeightedB",
			"graph1NodeWeights",
			"graph1",
			"graph1NodeWeights",
			"graph1",
			"pyNodeWeightedWatershedsSeeds",
			"pyNodeWeightedWatershedsSegmentation",
			"show",
			"pyFelzenszwalbSegmentation",
			"edgeLength",
			"getEdgeLength",
			"nodeWeighs",
			"\"\"\"\n",
			"nFeatures",
			"nF",
			"0",
			"FloatEdgeArray",
			"edgeIndicator",
			"pyGridGraphFactory",
			"pyCoordinateToNode",
			"nodeFeatures",
			"100",
			"pyResultLabels",
			"pyReprNodeIds",
			"nodeSizes",
			"graph1NodeSize",
			"nodeNumStopCond",
			"pyFelzenszwalbSegmentation",
			"pyMakeRegionAdjacencyGraph",
			"makeReg",
			"maxEdgeId",
			"edgeNum",
			"HyperEdgeMap",
			"makeReg",
			"generateWatershedSeeds2",
			"IsOutFilter",
			"prepareWatersheds2",
			"prepareWatersheds",
			"generateWatershedSeeds",
			"UnionFind",
			"generateWatershedSeeds",
			"seededWatersheds",
			"unionFindWatersheds",
			"lowestNeighborIndex",
			"neighborIndices_",
			"prepareWatersheds",
			"degree",
			"pyEdgeWeightedWatershedsSegmentation",
			"Edge",
			"pyEdgeWeightedWatershedSegmentation",
			"pyWatershedSegmentation",
			"WatershedOptions",
			"watershedsGraph",
			"watershedsMultiArray",
			"WatershedOptions",
			"vigra",
			"segShow",
			"showSeg",
			"Edge",
			"pyEdgeWeightNodeFeaturesConstructor",
			"NewMergeGraphCallbacks",
			"itemIds",
			"nodeId",
			"idMap",
			"pyRagProjectNodeFeaturesToBaseGraph",
			"graphNodeFeaturesArray",
			"xyzc",
			"OG_DIM",
			"G_DIM",
			"OG_DIM",
			"G_DIM",
			"OG_DIM",
			"G_DIM",
			"NumpyEdgeMap",
			"Edge",
			"pyRagEdgeFeatures",
			"Graph",
			"Edge",
			"VIGRA_DENSE_REFERENCE_MAP_HXX"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"GraphAlgorithmTestSuite",
			"GraphAlgorithmTest",
			"edgeLengths",
			"nodeFeatures",
			"pyEdgeWeightedWatershedsSegmentation",
			"pyEdgeWeightedWatershedSegmentation",
			"Node",
			"VIGRA_PYTHON_GRAPH_MAPS_HXX",
			"graph1",
			"graph0",
			"vigraph.listGraph()",
			"pyRagNodeFeaturesSingleband",
			"pyRagNodeFeaturesMultiband",
			"pyEdgeWeightsFromInterpolatedImage",
			"SIZE_OF_AFFILIATED_EDGES",
			"AFFILIATED_EDGES",
			"affiliatedEdges",
			"VIGRA_EXPORT_GRAPH_RAG_VISITOR_HXX",
			"VIGRA_EXPORT_RAG_SHORTEST_PATH_VISITOR_HXX",
			"VIGRA_EXPORT_GRAPH_RAG_VISITOR_HXX",
			"leafNodeIdsAsNumpyArray",
			"VIGRA_EXPORT_GRAPH_SHORTEST_PATH_VISITOR_HXX",
			"Recursive",
			"parameter",
			"pyNodeIdsFeatures",
			"pyNodeIdsLabels",
			"resize",
			"GraphOut",
			"GraphIn",
			"edgeWeights",
			"eatureDistToEdgeWeight",
			"VIGRA_METRICS_HXX",
			"UInt32NodeArray",
			"LabelNodeArray",
			"NodeFloatMap",
			"LemonUndirectedGraphAddItemsVisitor",
			"LemonUnirectedGraphAddItemsVisitor",
			"LemonUndirectedGraphCoreVisitor",
			"pyGridGraphFelzenszwalbSegmentation",
			"neighbourId",
			"neighbour",
			"vertex_descriptor",
			"get_vertex_end_iterator",
			"get_vertex_iterator",
			"get_edge_end_iterator",
			"get_edge_iterator",
			"graph.",
			"addNode",
			"AdjacencyListGraphMergeGraphAdaptorTestSuite",
			"Graph",
			"GraphNode",
			"graph2x2_",
			"Graph",
			"GRaph",
			"AdjacencyListGraph2MergeGraphTest",
			"VIGRA_SEG_TO_SEED_HXX",
			"ArcToTargetNodeHolder",
			"VIGRA_MERGE_GRAPH_PYTHON_CLUSTERING_OPERATOR_HXX",
			"clusterOperator_",
			"MergeGraph",
			"pyHyperNodeImageFeatures",
			"nodeFeatures",
			"edgeIndicator",
			"graph",
			"EDGE_INDICATOR",
			"EDGE_INDICATOR_MAP",
			"ItemHelper",
			"HClusterMap",
			"EdgeSizeMapView",
			"EdgeIndicatorMapView",
			"VIGRA_PYTHON_GRAPH_GENERALIZATION_HXX",
			"rag",
			"edge",
			"Edge",
			"Node",
			"node",
			"Node",
			"VIGRA_ADJACENCY_LIST_GRAPH_HXX",
			"OPENGM_MCGRAPHCUT_HXX",
			"VIGRA_GRAPH_MAP_ALGORITHMS_HXX",
			"Graph",
			"ArcIteratorHolder",
			"NodeIteratorHolder",
			"EdgeIteratorHolder",
			"VIGRA_GRAPH_GENERALIZATION_HXX",
			"deleteItem",
			"ChangeablePriorityQueue",
			"g",
			"AdjacencyListGraphOffTest",
			"adjGraphSimpleTestStart1",
			"AdjacencyListGraph",
			"",
			"EdgeItInGraph",
			"EdgeItOutGraph",
			"VIGRA_NEW_RAG_HXX",
			"AdjacencyListGraphOffset1Test",
			"EdgeStorage",
			"AdjacencyListGraph<OFFSET>",
			"> >",
			"AdjacencyListGraphTestSuite",
			"GraphType",
			"adjGraph",
			"AdjacencyListGraphTest",
			"AdjacencyListGraph<OFFSET>",
			"AdjacencyListGraph<OFFSETE>",
			"GraphType",
			"AdjacencyListGraph",
			"VIGRA_DENSE_REFERENCE_MULTI_MAP_HXX",
			"VIGRA_DENSE_REFERENCE_MAP_HXX",
			"VIGRA_HIERARCHICAL_CLUSTERING_HXX",
			"HierarchicalClustering",
			"leqt",
			"VIGRA_PRIORITY_QUEUE_HXX",
			"ragMergeGridDegreeTest",
			"contractEdge",
			"//VIGRA_ASSERT_OP",
			"MergeTreeEncoding",
			"buildMergeTreeEndcoding_",
			"mergeTreeEndcoding_",
			"VIGRA_MERGE_GRAPH_VIEW_MAP_HXX",
			"UcmEdgeSizeMap",
			"edgeIndicatorMap",
			"NodeCoordinatesMap",
			"EdgeCoordinatesMap",
			"DenseReferenceMap",
			"Arc",
			"MergeGraphArcIt",
			"uId"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3719,
						"regions":
						{
						},
						"selection":
						[
							[
								1026,
								1026
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
										"PATH": "/usr/local/bin:/usr/local/sbin:$PATH",
										"PYTHONPATH": "/usr/local/lib/python2.7/site-packages:/usr/local/lib/python:$PYTHONPATH"
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "mt.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 353,
						"regions":
						{
						},
						"selection":
						[
							[
								350,
								350
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/tbeier/.config/sublime-text-3/Packages/User/SublimePython.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1166,
						"regions":
						{
						},
						"selection":
						[
							[
								296,
								296
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
										"PATH": "/usr/local/bin:/usr/local/sbin:$PATH",
										"PYTHONPATH": "/usr/local/lib/python2.7/site-packages:/usr/local/lib/python:$PYTHONPATH"
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/tbeier/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 225,
						"regions":
						{
						},
						"selection":
						[
							[
								188,
								188
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
										"PATH": "/usr/local/bin:/usr/local/sbin:$PATH",
										"PYTHONPATH": "/usr/local/lib/python2.7/site-packages:/usr/local/lib/python:$PYTHONPATH"
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/tbeier/.config/sublime-text-3/Packages/LaTeXTools/LaTeXTools Preferences.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3160,
						"regions":
						{
						},
						"selection":
						[
							[
								3160,
								3160
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/tbeier/.config/sublime-text-3/Packages/User/SublimeCodeIntel.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4547,
						"regions":
						{
						},
						"selection":
						[
							[
								4168,
								4168
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1824.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/tbeier/src/vigra/vigranumpy/src/core/export_graph_visitor.hxx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22063,
						"regions":
						{
						},
						"selection":
						[
							[
								1684,
								1684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 470,
						"regions":
						{
						},
						"selection":
						[
							[
								103,
								103
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 76.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/tbeier/src/vigra/test/utilities/test.cxx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41194,
						"regions":
						{
						},
						"selection":
						[
							[
								2871,
								2871
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 323.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.710600907029,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 322.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 23.0
	},
	"project": "mt.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 351.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
